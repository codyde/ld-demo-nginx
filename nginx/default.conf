# map $http_upgrade $connection_upgrade {
#     default upgrade;
#     ''      close;
# }

# error_log  /var/log/nginx/error.log notice;
# pid        /var/run/nginx.pid;

events {
    worker_connections 1024;
}

env LD_SDK_KEY;

http {
    resolver 8.8.8.8; 
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    lua_package_path ";;/usr/local/openresty/nginx/scripts/?.lua;";

    init_worker_by_lua_file scripts/shared.lua;


server {

  listen 80;

  sendfile on;

  default_type application/octet-stream;


  gzip on;
  gzip_http_version 1.1;
  gzip_disable      "MSIE [1-6]\.";
  gzip_min_length   1100;
  gzip_vary         on;
  gzip_proxied      expired no-cache no-store private auth;
  gzip_types        text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_comp_level   9;


  root /usr/share/nginx/html;

  location / {
    try_files $uri $uri/ /index.html;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_read_timeout 300s;
    proxy_connect_timeout 75s;
  }

  location /api/health {
    set $proxy_host "";
    rewrite_by_lua_block {
        local ld     = require("launchdarkly_server_sdk")
        local client = require("shared")
        local user = ld.makeUser({
            key = "abc"
        })
        ngx.var.proxy_host = client:stringVariation(user, "proxyHealth", "http://posts-service.kong.svc.cluster.local:5000")
    }
    proxy_pass $proxy_host/api/health;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
  }

}
}
